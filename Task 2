<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Stopwatch</title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>
  <div class="stopwatch">
    <div class="display">
      <span id="hours">00</span>:<span id="minutes">00</span>:
      <span id="seconds">00</span>.<span id="milliseconds">00</span>
    </div>
    <div class="controls">
      <button id="startPause">Start</button>
      <button id="reset" disabled>Reset</button>
      <button id="lap" disabled>Lap</button>
    </div>
    <ul id="laps"></ul>
  </div>
  <script src="script.js"></script>
</body>
</html>
body {
  display: flex;
  height: 100vh;
  margin: 0;
  align-items: center;
  justify-content: center;
  background: #f0f0f0;
  font-family: Arial, sans-serif;
}

.stopwatch {
  background: #fff;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  text-align: center;
  width: 300px;
}

.display {
  font-size: 2.5rem;
  font-weight: bold;
  margin-bottom: 1rem;
}

.controls button {
  margin: 0 0.5rem;
  padding: 0.5rem 1rem;
  font-size: 1rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

#startPause { background: #28a745; color: #fff; }
#reset     { background: #dc3545; color: #fff; }
#lap       { background: #007bff; color: #fff; }

#laps {
  list-style: none;
  padding: 0;
  max-height: 200px;
  margin-top: 1rem;
  overflow-y: auto;
}

#laps li {
  padding: 0.25rem;
  border-bottom: 1px solid #eee;
  font-family: monospace;
  font-size: 1rem;
}
let startTime = 0, elapsed = 0, timerID = null, lapCount = 0;

const hEl  = document.getElementById('hours');
const mEl  = document.getElementById('minutes');
const sEl  = document.getElementById('seconds');
const msEl = document.getElementById('milliseconds');
const startPauseBtn = document.getElementById('startPause');
const resetBtn = document.getElementById('reset');
const lapBtn = document.getElementById('lap');
const lapsUl = document.getElementById('laps');

function pad(num) {
  return num.toString().padStart(2, '0');
}

function updateDisplay(time) {
  const hrs = Math.floor(time / 3600000);
  const mins = Math.floor((time % 3600000) / 60000);
  const secs = Math.floor((time % 60000) / 1000);
  const ms = Math.floor((time % 1000) / 10);
  hEl.textContent  = pad(hrs);
  mEl.textContent  = pad(mins);
  sEl.textContent  = pad(secs);
  msEl.textContent = pad(ms);
}

function tick() {
  const now = Date.now();
  elapsed = now - startTime;
  updateDisplay(elapsed);
}

startPauseBtn.addEventListener('click', () => {
  if (!timerID) {
    startTime = Date.now() - elapsed;
    timerID = setInterval(tick, 10);
    startPauseBtn.textContent = 'Pause';
    resetBtn.disabled = lapBtn.disabled = false;
  } else {
    clearInterval(timerID);
    timerID = null;
    startPauseBtn.textContent = 'Start';
  }
});

resetBtn.addEventListener('click', () => {
  clearInterval(timerID);
  timerID = null;
  elapsed = 0;
  updateDisplay(elapsed);
  lapsUl.innerHTML = '';
  lapCount = 0;
  startPauseBtn.textContent = 'Start';
  resetBtn.disabled = lapBtn.disabled = true;
});

lapBtn.addEventListener('click', () => {
  lapCount++;
  const li = document.createElement('li');
  li.textContent = `Lap ${lapCount} â€“ ${hEl.textContent}:${mEl.textContent}:${sEl.textContent}.${msEl.textContent}`;
  lapsUl.appendChild(li);
});
